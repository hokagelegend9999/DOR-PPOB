#!/bin/bash

# =================================================================
# Installer Interaktif Bot Telegram & Webhook untuk Proyek DOR-PPOB
# Dibuat untuk Ubuntu 22.04 / 20.04
# =================================================================

# Warna untuk output
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m' # No Color

# --- Variabel ---
REPO_URL="https://github.com/hokagelegend9999/DOR-PPOB.git"
PROJECT_DIR="DOR-PPOB"
DOMAIN="ujicoba.hokagelegend.web.id" # Ganti jika domain Anda berbeda

echo -e "${GREEN}Memulai instalasi Bot DOR-PPOB...${NC}"

# 1. Update & Upgrade Sistem
echo -e "\n${YELLOW}1. Memperbarui paket sistem...${NC}"
sudo apt update && sudo apt upgrade -y > /dev/null 2>&1

# 2. Install Dependensi yang Dibutuhkan
echo -e "\n${YELLOW}2. Menginstall dependensi (Python, Pip, Git, Nginx, Screen)...${NC}"
sudo apt install -y python3 python3-pip python3-venv git nginx screen > /dev/null 2>&1

# 3. Menghentikan Proses Bot yang Mungkin Sudah Berjalan
echo -e "\n${YELLOW}3. Mencari dan menghentikan proses bot lama (jika ada)...${NC}"
# Menghentikan screen session
screen -S bot -X quit > /dev/null 2>&1
screen -S webhook -X quit > /dev/null 2>&1
# Menghentikan proses python secara paksa sebagai cadangan
pkill -f "bot.py"
pkill -f "webhook_server.py"
echo "Proses lama telah dihentikan."

# 4. Clone Repository dari GitHub
echo -e "\n${YELLOW}4. Mengunduh file bot dari GitHub...${NC}"
cd ~
# Hapus folder lama jika ada untuk memastikan file terbaru
sudo rm -rf $PROJECT_DIR
git clone $REPO_URL
cd $PROJECT_DIR

# 5. Konfigurasi Interaktif
echo -e "\n${YELLOW}5. Konfigurasi Interaktif...${NC}"
echo "Silakan masukkan kredensial bot Anda:"
read -p "Masukkan BOT_TOKEN Anda: " BOT_TOKEN_INPUT
read -p "Masukkan ADMIN_ID Telegram Anda: " ADMIN_ID_INPUT

# Mengganti placeholder di config.py
sed -i "s|BOT_TOKEN_PLACEHOLDER|$BOT_TOKEN_INPUT|g" config.py
sed -i "s|ADMIN_ID_PLACEHOLDER|$ADMIN_ID_INPUT|g" config.py
echo "File config.py telah diperbarui dengan Token dan ID Anda."

# 6. Setup Lingkungan Virtual Python
echo -e "\n${YELLOW}6. Menyiapkan lingkungan virtual Python...${NC}"
python3 -m venv venv
source venv/bin/activate

# 7. Install Library Python
echo -e "\n${YELLOW}7. Menginstall library Python dari requirements.txt...${NC}"
if [ -f "requirements.txt" ]; then
    pip install -r requirements.txt > /dev/null 2>&1
else
    echo -e "${RED}ERROR: File requirements.txt tidak ditemukan di repository!${NC}"
    echo -e "${YELLOW}Pastikan Anda sudah membuat dan push file tersebut ke GitHub.${NC}"
    exit 1
fi
deactivate

# 8. Konfigurasi Nginx sebagai Reverse Proxy
echo -e "\n${YELLOW}8. Mengkonfigurasi Nginx...${NC}"
NGINX_CONFIG_FILE="/etc/nginx/sites-available/bot_hokagelegend"
sudo tee $NGINX_CONFIG_FILE > /dev/null <<EOF
server {
    listen 80;
    server_name $DOMAIN;

    location /tripay-callback {
        proxy_pass http://127.0.0.1:5000;
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
    }
    
    location / {
        root /var/www/html;
        index index.html;
    }
}
EOF

# Mengaktifkan konfigurasi Nginx
if [ -L "/etc/nginx/sites-enabled/bot_hokagelegend" ]; then
    sudo rm /etc/nginx/sites-enabled/bot_hokagelegend
fi
sudo ln -s $NGINX_CONFIG_FILE /etc/nginx/sites-enabled/
if [ -L "/etc/nginx/sites-enabled/default" ]; then
    sudo rm /etc/nginx/sites-enabled/default
fi

# Test dan Restart Nginx
if sudo nginx -t; then
    sudo systemctl restart nginx
else
    echo -e "${RED}Konfigurasi Nginx gagal! Mohon periksa manual.${NC}"
    exit 1
fi

# 9. Konfigurasi Firewall
echo -e "\n${YELLOW}9. Mengkonfigurasi Firewall (UFW)...${NC}"
sudo ufw allow 'Nginx Full' > /dev/null 2>&1
sudo ufw --force enable

# --- INSTALASI SELESAI ---
echo -e "\n\n${GREEN}===============================================${NC}"
echo -e "${GREEN}  ✅ INSTALASI SELESAI! ✅${NC}"
echo -e "${GREEN}===============================================${NC}"
echo -e "\n${YELLOW}LANGKAH TERAKHIR YANG HARUS ANDA LAKUKAN SECARA MANUAL:${NC}"
echo -e "1. Masuk ke direktori proyek:"
echo -e "   ${YELLOW}cd ~/$PROJECT_DIR${NC}"
echo ""
echo -e "2. Edit file konfigurasi untuk memasukkan kredensial Tripay & URL:"
echo -e "   ${YELLOW}nano config.py${NC}"
echo -e "   (Isi ${GREEN}TRIPAY_API_KEY_SANDBOX${NC}, ${GREEN}TRIPAY_PRIVATE_KEY_SANDBOX${NC}, dll.)"
echo -e "   (Pastikan ${GREEN}WEBHOOK_CALLBACK_URL${NC} sudah benar: http://$DOMAIN/tripay-callback)"
echo ""
echo -e "3. Perbarui URL Callback di dashboard Sandbox Tripay Anda ke:"
echo -e "   ${YELLOW}http://$DOMAIN/tripay-callback${NC}"
echo ""
echo -e "4. Jalankan Webhook Server di background menggunakan 'screen':"
echo -e "   ${YELLOW}screen -S webhook${NC}"
echo -e "   (Setelah masuk screen) Jalankan:"
echo -e "   ${YELLOW}source venv/bin/activate && gunicorn --bind 127.0.0.1:5000 webhook_server:app${NC}"
echo -e "   (Tekan ${GREEN}Ctrl+A${NC} lalu ${GREEN}D${NC} untuk keluar dari screen tanpa mematikannya)"
echo ""
echo -e "5. Jalankan Bot Utama di background menggunakan 'screen':"
echo -e "   ${YELLOW}screen -S bot${NC}"
echo -e "   (Setelah masuk screen) Jalankan:"
echo -e "   ${YELLOW}source venv/bin/activate && python3 bot.py${NC}"
echo -e "   (Tekan ${GREEN}Ctrl+A${NC} lalu ${GREEN}D${NC} untuk keluar)"
echo ""
echo -e "${GREEN}Bot Anda sekarang sudah berjalan!${NC}"
